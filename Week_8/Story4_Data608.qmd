---
title: "Story4_Data608"
author: "Mubashira Qari"
format: revealjs
editor: visual
date: 2025-2-22"
---

### Defining Business Question

-   Task is to analyze NYC Airbnb listings, determine what drives revenue and occupancy, and present insights in a clear, data-driven slideshow.
-   Where are the best investment opportunities? (Identify high-potential but undervalued listings.)
-   How can underperforming hosts improve? (Identify common mistakes & provide actionable advice.)
-   Why should new hosts list on Airbnb? (Highlight profitable areas & market demand.)

```{r, warning = FALSE, message = FALSE, echo = FALSE, include=FALSE}
# echo=FALSE, include=FALSE

library(knitr)
library(tidyverse)
library(readxl)
library(ggplot2)
library(dplyr)
library(ggfortify)
library(RColorBrewer)
library(tidyr)
library(ggplot2)
library(dplyr)
library(usmap)   # For U.S. map plotting
library(sf)         # Spatial data
library(geojsonsf)  # GeoJSON handling
library(viridis) # For color scales


# Loading Dataset

airbnb_df <- read_csv("https://raw.githubusercontent.com/uzmabb182/Data_608/refs/heads/main/Week_8/nyc_airbnb_listings.csv")
nyc_geo <- st_read("https://raw.githubusercontent.com/uzmabb182/Data_608/refs/heads/main/Week_8/neighbourhoods.geojson")

#head(airbnb_df)

```

## Task to Create a Story:

-   Where are the best investment opportunities? (Identify high-potential but undervalued listings.)

```{r, warning = FALSE, message = FALSE, echo = FALSE, include=FALSE}
## Exploratory Data Analysis:
# Quick summary
#str(airbnb_df)
#summary(airbnb_df)
#summary(nyc_geo)
# Check structure
#glimpse(airbnb_df)
#glimpse(nyc_geo)

# Check the differences between datasets
#setdiff(nyc_geo$neighbourhood, airbnb_df$neighborhood)

#colnames(airbnb_df)
#nrow(airbnb_df)
#nrow(nyc_geo)

# Check for Duplicates
airbnb_df %>%
  count(neighborhood) %>%
  arrange(desc(n))

library(sf)

# Check if there are invalid geometries
invalid_geometries <- nyc_geo[!st_is_valid(nyc_geo), ]

#print(invalid_geometries)

# Remove Duplicate or Empty Geometries

nyc_geo <- nyc_geo %>%
  filter(st_is_valid(geometry), !st_is_empty(geometry))

nyc_geo %>%
  count(neighbourhood) %>%
  arrange(desc(n))

# If duplicate neighborhoods exist, keep only one row per neighborhood

nyc_geo <- nyc_geo %>%
  distinct(neighbourhood, .keep_all = TRUE)

# Before merging, ensure that both datasets have matching column names for neighborhoods.
#colnames(nyc_geo)   # Check column names in nyc_geo
#colnames(airbnb_df) # Check column names in airbnb_df

# Since airbnb_df has multiple listings per neighborhood, we need to summarize it before merging
library(dplyr)

# Aggregate Airbnb data at the neighborhood level: Summarize the Airbnb data by neighborhood
airbnb_summary <- airbnb_df %>%
  group_by(neighborhood) %>%
  summarise(
    avg_price = mean(price, na.rm = TRUE),
    total_listings = n(),
    avg_revenue = mean(revenue, na.rm = TRUE),
    avg_occupancy = mean(occupancy, na.rm = TRUE)
  )

#airbnb_summary

# If these neighborhoods genuinely have no Airbnb listings, it’s best to keep the NA values after merging
nyc_geo <- nyc_geo %>%
  left_join(airbnb_summary, by = c("neighbourhood" = "neighborhood"))

#summary(nyc_geo)

# Assign Zero Values for Airbnb Metrics

nyc_geo <- nyc_geo %>%
  mutate(
    avg_price = replace_na(avg_price, 0),
    total_listings = replace_na(total_listings, 0),
    avg_revenue = replace_na(avg_revenue, 0),
    avg_occupancy = replace_na(avg_occupancy, 0)
  )

# Investigate Possible Naming Differences
#unique(airbnb_df$neighborhood)

# Since Airbnb has multiple listings per neighborhood, first calculate the average price per neighborhood

library(dplyr)

# Calculate average price per neighborhood
price_summary <- airbnb_df %>%
  group_by(neighborhood) %>%
  summarise(avg_price = mean(price, na.rm = TRUE)) %>%
  arrange(desc(avg_price))  # Sort from highest to lowest price

```

## Data-Driven Story: Where Are the Best Airbnb Investment Opportunities in NYC?

-   Identifying High-Potential but Undervalued Listings
-   New York City’s Airbnb market is vast, but not all listings perform equally. 
-   Some hosts struggle with low revenue, while others maximize profits. Where should I as an investors focus?
-   This analysis uncovers neighborhoods with high demand but underpriced listings, offering the best investment opportunities.

## Airbnb Listings Density Map

```{r}
# Load required libraries
library(sf)
library(dplyr)
library(ggplot2)
library(plotly)

nyc_geo <- nyc_geo %>%
  rename(neighborhood = neighbourhood)  # Fix name if needed

# Step 1: Count total listings per neighborhood
listing_counts <- airbnb_df %>%
  group_by(neighborhood) %>%
  summarise(n = n(), .groups = "drop")  # Count number of listings per neighborhood

# Step 2: Merge the listing counts with NYC geographic data
nyc_map_data <- nyc_geo %>%
  left_join(listing_counts, by = "neighborhood")

# Step 3: Create a ggplot map with hover text
p <- ggplot(nyc_map_data) +
  geom_sf(aes(fill = n, 
              text = paste0(
                "Neighborhood: ", neighborhood, "<br>",
                "Total Listings: ", n
              )
  ), color = "white", size = 0.2) +
  scale_fill_viridis_c(option = "plasma", name = "Total Listings") +
  labs(
    title = "Number of Airbnb Listings by NYC Neighborhood"
  ) +
  theme_minimal()

# Step 4: Convert ggplot to interactive plotly map
interactive_map <- ggplotly(p, tooltip = "text")

# View the interactive map
interactive_map
```

## Key Insights:

-   The yellow and orange areas represent neighborhoods with the highest number of Airbnb listings.
-   The dark blue areas indicate fewer listings, suggesting less Airbnb activity in those neighborhoods.

## The highest concentration of listings:

-   Appears in parts of Manhattan and Brooklyn, especially around Midtown Manhattan and Williamsburg.
-   These areas are prime Airbnb hotspots, likely due to strong demand from tourists and business travelers.
-   Many parts of Staten Island, the Bronx, and Queens have significantly fewer listings.
-   These areas may have lower tourist demand or stricter short-term rental regulations.
-   Business Implications & Investment Insights

## Business Recommendations:

-   High-Listing Neighborhoods indicate strong demand, but competition is high. 
-   Hosts should differentiate by offering premium amenities and unique experiences.
-   Low-Listing Neighborhoods may present opportunities for growth if demand exists but supply is limited. 
-   Potential for targeting budget travelers and longer stays.
-   Staten Island & the Bronx investors should assess whether Airbnb restrictions or low tourism impact listing growth in these areas.

## Average Rent per Night by Neighbourhood Group

```{r}
library(dplyr)
library(ggplot2)

# Calculate average price per night by neighbourhood group
avg_price_per_group <- airbnb_df %>%
  group_by(neighbourhood_group) %>%
  summarise(avg_price = mean(price, na.rm = TRUE)) %>%
  arrange(desc(avg_price))  # Sort by highest average price

# View results
#print(avg_price_per_group)

# Bar chart of average price per neighbourhood group
ggplot(avg_price_per_group, aes(x = reorder(neighbourhood_group, -avg_price), y = avg_price, fill = neighbourhood_group)) +
  geom_col() +
  theme_minimal() +
  labs(
    title = "Average Rent per Night by Neighbourhood Group",
    x = "Neighbourhood Group",
    y = "Average Price ($ per Night)"
  ) +
  theme(axis.text.x = element_text(angle = 30, hjust = 1))  # Rotate x-axis for better readability
```

## Key Insights:

-   Bronx, Queens, and Staten Island offer the lowest average nightly rates – ideal for budget-conscious travelers.

## Business Suggestions:

-   Some Neighbourhood Groups Have Significantly Higher Prices: highlight premium amenities to justify the price
-   Lower-Priced Neighbourhoods May Attract Budget Travelers: Hosts should focus on volume (more bookings) and offering discounts for longer stays.
-   Low-priced areas: Improve listing quality (better photos, amenities) to compete with premium areas.

## Proving: "Highlight Premium Amenities to Justify the Price" with Data

-   To support this claim, we need to analyze:
-   How amenities impact price – Do listings with premium amenities charge higher prices?
-   Occupancy vs. amenities – Are premium listings getting booked frequently?

## Evidence: Listings with More Premium Amenities Have Higher Prices

```{r}
library(ggplot2)
library(dplyr)

# Count number of amenities per listing
airbnb_df <- airbnb_df %>%
  mutate(num_amenities = str_count(amenities, ",") + 1)

# Group by number of amenities and calculate average price
amenities_price <- airbnb_df %>%
  group_by(num_amenities) %>%
  summarise(avg_price = mean(price, na.rm = TRUE)) 

# Plot
ggplot(amenities_price, aes(x = num_amenities, y = avg_price)) +
  geom_point(color = "blue", size = 2) +
  geom_smooth(method = "lm", color = "red") +
  theme_minimal() +
  labs(
    title = "Impact of Amenities on Price",
    x = "Number of Amenities",
    y = "Average Price ($ per Night)"
  )
```
## Key Insights:

-   Listings with more amenities tend to have higher average prices.
-   Basic listings (few amenities) cost less compared to fully equipped ones.
-   The positive trend suggests that hosts can charge a premium by offering more features.

## Evidence: High-Value Amenities Are Present in High-Priced Listings

```{r}
# Define premium amenities
premium_amenities <- c("Pool", "Gym", "Hot tub", "Elevator", "Doorman", "Parking")

# Create binary columns for each premium amenity
for (amenity in premium_amenities) {
  airbnb_df[[amenity]] <- grepl(amenity, airbnb_df$amenities, ignore.case = TRUE)
}

# Calculate average price for listings with and without premium amenities
amenities_price_comparison <- airbnb_df %>%
  dplyr::select(all_of(premium_amenities), price) %>%
  pivot_longer(cols = all_of(premium_amenities), names_to = "Amenity", values_to = "Has_Amenity") %>%
  group_by(Amenity, Has_Amenity) %>%
  summarise(avg_price = mean(price, na.rm = TRUE))

# Plot
ggplot(amenities_price_comparison, aes(x = Amenity, y = avg_price, fill = Has_Amenity)) +
  geom_col(position = "dodge") +
  theme_minimal() +
  scale_fill_manual(values = c("gray", "blue")) +
  labs(
    title = "Impact of Premium Amenities on Price",
    x = "Premium Amenity",
    y = "Average Price ($ per Night)",
    fill = "Has Amenity?"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
## Key Insights: Listings with Premium Amenities Charge Higher Prices

-   Gym, Pool, and Elevator significantly increase the price per night.
-   Listings with a Gym or Pool have the highest average price.
-  Properties with an Elevator also show a strong price increase.

## Some Amenities Have Less Impact on Price

-   Doorman, Parking, and Hot Tub do not significantly raise prices.
-   In some cases (Hot Tub), listings without the amenity have slightly higher prices, possibly due to other factors like location or luxury features.

## The Strongest Premium Factors

-   Gym and Pool show the largest price difference between properties that have them and those that don’t.
-   These amenities are likely seen as luxury features that justify a higher rental price.

## Business Suggestions:

-   Highlight Premium Amenities in Listings
-   Hosts with Gyms and Pools should actively promote these features in their listings to attract higher-paying guests.

## Invest in High-Impact Amenities

-   If targeting high-end renters, adding a gym or pool can justify higher pricing.
-   Elevators may be more attractive for guests staying in high-rise buildings.

## Evidence: Premium Amenities Also Boost Occupancy

```{r}
# Calculate average occupancy rate for listings with and without premium amenities
amenities_occupancy <- airbnb_df %>%
  dplyr::select(all_of(premium_amenities), occupancy) %>%
  pivot_longer(cols = all_of(premium_amenities), names_to = "Amenity", values_to = "Has_Amenity") %>%
  group_by(Amenity, Has_Amenity) %>%
  summarise(avg_occupancy = mean(occupancy, na.rm = TRUE))

# Plot
ggplot(amenities_occupancy, aes(x = Amenity, y = avg_occupancy, fill = Has_Amenity)) +
  geom_col(position = "dodge") +
  theme_minimal() +
  scale_fill_manual(values = c("gray", "blue")) +
  labs(
    title = "Impact of Premium Amenities on Occupancy Rate",
    x = "Premium Amenity",
    y = "Average Occupancy Rate (%)",
    fill = "Has Amenity?"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
## Key Insights:

-   Elevator is the Only Amenity That Boosts Occupancy
-   Listings with Elevators have a higher occupancy rate than those without.
-   This may reflect demand from guests looking for accessibility or higher-floor apartments.

## Other Premium Amenities Reduce Occupancy

-   Surprisingly, listings with Gyms, Pools, Parking, or Hot Tubs tend to have lower occupancy than listings without them.
-   This suggests these features may raise prices but don’t necessarily attract more frequent bookings.

## Basic Listings May Be Booked More Often

-   Listings without premium amenities tend to have higher occupancy rates, possibly because:
-   They are more affordable.
-   They appeal to budget travelers or short-term stays.
-   Overpriced luxury listings may get booked less frequently.

## Low-Priced Areas Have Decent Occupancy Rates

-   Let’s check if these areas also have good occupancy, supporting the "volume strategy".


```{r}
# Create price categories
airbnb_df <- airbnb_df %>%
  mutate(price_category = case_when(
    price <= 50 ~ "Very Low",
    price <= 150 ~ "Low",
    price <= 300 ~ "Medium",
    price <= 600 ~ "High",
    price > 600 ~ "Very High",
    TRUE ~ NA_character_
  ))

# Remove NAs and summarize
price_occ_summary <- airbnb_df %>%
  filter(!is.na(price_category)) %>%
  group_by(price_category) %>%
  summarise(
    avg_occupancy = mean(occupancy, na.rm = TRUE),
    avg_revenue = mean(revenue, na.rm = TRUE)
  )

# Plot occupancy by price category
ggplot(price_occ_summary, aes(x = price_category, y = avg_occupancy, fill = avg_revenue)) +
  geom_col() +
  theme_minimal() +
  scale_fill_viridis_c() +
  labs(
    title = "Occupancy vs. Price Category",
    x = "Price Category",
    y = "Average Occupancy Rate",
    fill = "Avg Revenue ($)"
  )
```
## Key Insights:

-   Very Low-Priced Listings Have the Highest Occupancy
-   These listings are booked most frequently, likely because they are affordable and attract budget-conscious travelers.
-   However, their average revenue is the lowest (dark purple), due to low pricing despite high demand.

## Low and Medium-Priced Listings Also Perform Well

-   High occupancy with slightly better revenue than the very low category.
-   Ideal for hosts targeting volume-based strategies (frequent bookings, possibly longer stays).

## Very High-Priced Listings Have the Lowest Occupancy

-   These listings are booked less frequently, likely due to being out of range for average guests.
-   But they generate high average revenue (yellow color), meaning they make up for low volume with premium pricing.

## High-Priced Listings Balance Both

-   Moderate-to-high occupancy and solid revenue — possibly best for stable income.

## Encouraging Longer Stays via Discounts

-   Listings with low nightly rates and low minimum night requirements are common in lower-priced areas.

## Minimum Nights vs Price by Neighborhood Group

```{r}
# Load required libraries
library(ggplot2)
library(dplyr)
library(patchwork)  # For combining plots

# Step 1: Summarize the data
stay_summary <- airbnb_df %>%
  group_by(neighbourhood_group) %>%
  summarise(
    avg_price = mean(price, na.rm = TRUE),
    avg_min_stay = mean(minimum_nights, na.rm = TRUE)
  )

# Step 2: Create the top chart (Price)
plot_price <- ggplot(stay_summary, aes(x = reorder(neighbourhood_group, -avg_price), y = avg_price, fill = neighbourhood_group)) +
  geom_col() +
  theme_minimal() +
  labs(
    title = "Average Price per Night by Neighbourhood Group",
    x = NULL,
    y = "Average Price ($)"
  ) +
  theme(legend.position = "none", axis.text.x = element_blank())

# Step 3: Create the bottom chart (Minimum Nights)
plot_min_stay <- ggplot(stay_summary, aes(x = reorder(neighbourhood_group, -avg_price), y = avg_min_stay, fill = neighbourhood_group)) +
  geom_col() +
  theme_minimal() +
  labs(
    title = "Average Minimum Stay by Neighbourhood Group",
    x = "Neighbourhood Group",
    y = "Avg. Minimum Nights"
  ) +
  theme(legend.position = "none")

# Step 4: Combine plots vertically
combined_plot <- plot_price / plot_min_stay  # stacked vertically
combined_plot

```
## Key Insights:

-   Top Chart (Price): Manhattan clearly stands out with the highest average nightly price.
-   Bottom Chart (Minimum Stay): Minimum night requirements are similar across boroughs, even though pricing varies.
-   This pattern indicates potential to attract longer stays in lower-priced areas by offering discounts or flexibility.

## Price Varies Significantly by Area

-   Manhattan has the highest average price per night (≈ $300), yet the same minimum stay requirement as other areas.
-   Bronx and Staten Island have much lower prices (≈ $100–150), even though their minimum night requirements are similar.

## High and low performing areas:

-  Low demand neighborhoods, leading to low revenue whereas high-revenue areas can guide where to invest.

```{r}
# Load required libraries
library(ggplot2)
library(plotly)
library(dplyr)

# Ensure the tooltip text includes neighborhood name and revenue
nyc_geo <- nyc_geo %>%
  mutate(hover_text = paste0(
    "Neighborhood: ", neighborhood, "<br>",
    "Avg Revenue: $", round(avg_revenue, 2)
  ))

# Create the base ggplot
revenue_plot <- ggplot(nyc_geo) +
  geom_sf(aes(fill = avg_revenue, text = hover_text), color = "white") +
  scale_fill_viridis_c(option = "magma", na.value = "gray90") +
  theme_minimal() +
  labs(
    title = "Airbnb Revenue Across NYC Neighborhoods",
    fill = "Avg. Revenue ($)"
  )

# Convert ggplot to interactive plotly map with tooltip
ggplotly(revenue_plot, tooltip = "text")

```

## Identifying overpriced and underpriced listings.

-   Overpriced listings (high price, low occupancy) should adjust pricing.
-   Underpriced listings (low price, high occupancy) could increase prices.

```{r}
library(ggplot2)
library(dplyr)

# Define price bins (ensure NA values are handled) and Creates a new column price_category based on price values.
airbnb_df <- airbnb_df %>%
  mutate(price_category = case_when(
    price <= 50   ~ "Very Low ($0 - $50)",
    price <= 150  ~ "Low ($51 - $150)",
    price <= 300  ~ "Medium ($151 - $300)",
    price <= 600  ~ "High ($301 - $600)",
    price > 600   ~ "Very High ($601+)",
    is.na(price)  ~ NA_character_  # Ensure missing values stay NA
  ))

# filters out listings where price_category is NA, ensuring only valid prices are analyzed.
airbnb_df <- airbnb_df %>%
  filter(!is.na(price_category))

# Order price categories correctly 
# Groups the dataset (airbnb_df) by the price_category column (e.g., "Low", "Medium", "High").
# Computes summary statistics for each price_category:
# avg_occupancy → Average occupancy rate in this price range.
# avg_revenue → Average revenue in this price range.
# count → Total number of listings in this price range.

price_bins_summary <- airbnb_df %>%
  group_by(price_category) %>%
  summarise(avg_occupancy = mean(occupancy, na.rm = TRUE),
            avg_revenue = mean(revenue, na.rm = TRUE),
            count = n()) %>%
  mutate(price_category = factor(price_category, levels = c(
    "Very Low ($0 - $50)", "Low ($51 - $150)", "Medium ($151 - $300)",
    "High ($301 - $600)", "Very High ($601+)"
  )))  # Ensures the correct order

# Improved Bar Chart
ggplot(price_bins_summary, aes(x = price_category, y = avg_occupancy, fill = avg_revenue)) +
  geom_col() +
  scale_fill_viridis_c() +  
  theme_minimal() +
  labs(
    title = "Average Occupancy Rate by Price Category",
    x = "Price Category ($ per Night)",
    y = "Average Occupancy Rate (%)",
    fill = "Avg. Revenue ($)"
  ) +
  theme(axis.text.x = element_text(angle = 30, hjust = 1))  # Rotate x-axis labels for clarity
```
## Business Takeaways: For Investors & Hosts

-   Lower-priced listings attract high occupancy, good for maximizing booking rates.
-   Mid-range listings balance occupancy and revenue well.
-   Luxury listings make high revenue per booking, but require longer vacancy periods.

## For Pricing Strategy:

-   Raising prices too much lowers occupancy significantly.
-   Finding the right balance between price and demand is key.

## How guest Ratings Impact Revenue.

-   This is the distribution of Airbnb revenue across different review rating categories. 


```{r}
library(ggplot2)
library(dplyr)

# Define review rating bins
airbnb_df <- airbnb_df %>%
  mutate(review_category = case_when(
    review_scores_rating < 2  ~ "Very Poor (0-2)",
    review_scores_rating < 3  ~ "Poor (2-3)",
    review_scores_rating < 4  ~ "Average (3-4)",
    review_scores_rating < 4.5 ~ "Good (4-4.5)",
    review_scores_rating >= 4.5 ~ "Excellent (4.5-5)",
    is.na(review_scores_rating) ~ "No Rating"
  ))

# Remove NA values in revenue for proper visualization
filtered_data <- airbnb_df %>%
  filter(!is.na(revenue))  

# Order the review categories properly
filtered_data$review_category <- factor(filtered_data$review_category, 
                                        levels = c("Very Poor (0-2)", "Poor (2-3)", 
                                                   "Average (3-4)", "Good (4-4.5)", 
                                                   "Excellent (4.5-5)", "No Rating"))
# Create improved boxplot
ggplot(filtered_data, aes(x = review_category, y = revenue, fill = review_category)) +
  geom_boxplot(outlier.shape = 1, outlier.color = "black") +  # Boxplot with outliers
  scale_y_continuous(limits = c(0, quantile(filtered_data$revenue, 0.99, na.rm = TRUE))) +  # Remove extreme outliers
  scale_fill_viridis_d() +  # Improved color scheme
  theme_minimal() +
  labs(
    title = "Impact of Reviews on Airbnb Revenue (Grouped Ratings)",
    x = "Review Category",
    y = "Revenue ($ per Month)",
    fill = "Review Category"
  ) +
  theme(axis.text.x = element_text(angle = 30, hjust = 1))  # Rotate x-axis labels for better readability
```
## Higher Ratings Tend to Have Higher Revenue

-   Listings in the Excellent and Good categories have higher median revenue compared to lower-rated properties.
-   These properties also have a wider spread (higher variance) in revenue, meaning some highly rated listings earn significantly more.

## Lower-Rated Listings Generate Less Revenue

-   Very Poor and Poor categories have the lowest median revenue, indicating guests avoid low-rated properties.
-   These listings show lower variability, meaning even the best-performing ones in these categories don’t earn much.

## Many High-Rated Listings Have Outliers

-   Good and Excellent categories have a large number of high-revenue outliers
-   This shows that some well-rated listings earn exceptionally well.

## Listings with No Ratings perform similarly to High-Rated listings

-   The No Rating category has a similar revenue distribution to high-rated properties.
-   Without ratings can still earn well, possibly due to strong location, amenities, or pricing strategies.

## Business Implications for Hosts

-   Hosts should improve ratings to increase revenue potential.
-   New listings without ratings can still perform well if they are competitively priced and well-marketed.
-   Some low-rated listings still make money, possibly due to prime locations or unique offerings.
-   Pricing strategy should align with rating trends—low-rated listings may need discounts to compete.

## Business Recommendations

-   Hosts should lower their minimum night requirement to increase bookings and earnings.
-   Hosts with long-term stays should offer competitive monthly discounts to attract guests.
-   Identify tourist-heavy area, and allowing weekend and short stays will increase demand.
-   Use Airbnb’s "Smart Pricing" tool to optimize rates for different stay lengths.
-   Provide weekly or biweekly discounts to attract longer-term guests while keeping high occupancy.

## Room Type & Pricing in Budget Areas

-   Since budget travelers look for affordability, comparing lower-priced areas (Bronx, Queens, Staten Island).

```{r}
# Filter data for budget-friendly neighborhoods
budget_areas <- c("Bronx", "Queens", "Staten Island")

room_type_summary <- airbnb_df %>%
  filter(neighbourhood_group %in% budget_areas) %>%
  group_by(neighbourhood_group, room_type) %>%
  summarise(avg_price = mean(price, na.rm = TRUE), count = n(), .groups = "drop")

# Plot
ggplot(room_type_summary, aes(x = reorder(room_type, avg_price), y = avg_price, fill = neighbourhood_group)) +
  geom_col(position = "dodge") +
  theme_minimal() +
  labs(
    title = "Room Type Pricing in Budget-Friendly Areas",
    x = "Room Type",
    y = "Average Price ($ per Night)",
    fill = "Neighbourhood Group"
  ) +
  theme(axis.text.x = element_text(angle = 30, hjust = 1))
```
## Key Insights:

-   Private rooms are the most affordable in these areas, making them attractive for solo travelers & budget tourists.
-   Entire homes cost more, so these listings may need longer stay discounts to remain competitive.

## Do Superhost Charge More?

-   Superhosts often have higher occupancy & pricing power.

```{r}
# Compare Superhosts vs Regular hosts
superhost_summary <- airbnb_df %>%
  group_by(host_is_superhost) %>%
  summarise(
    avg_price = mean(price, na.rm = TRUE),
    avg_revenue = mean(revenue, na.rm = TRUE),
    avg_occupancy = mean(occupancy, na.rm = TRUE),
    count = n(),
    .groups = "drop"
  )

# Plot
ggplot(superhost_summary, aes(x = as.factor(host_is_superhost), y = avg_price, fill = as.factor(host_is_superhost))) +
  geom_col() +
  theme_minimal() +
  labs(
    title = "Superhost vs. Regular Hosts: Pricing & Revenue",
    x = "Superhost Status",
    y = "Average Price ($ per Night)",
    fill = "Superhost"
  ) +
  theme(axis.text.x = element_text(angle = 30, hjust = 1))
```
## Key Insights:

-   Regular Hosts FALSE charge slightly higher average prices than Superhosts.
-   Avg price of 220 dollars for regular hosts reflects more premium or diverse listings among non-superhosts.

## Superhosts (TRUE) have slightly lower average prices.

-   Avg price 210 dollars shows Superhosts may price competitively to maintain high occupancy and good ratings.
-   NA values (unknown Superhost status) show very high average prices.
-   Avg price 500 dollars likely due to missing or incomplete data
-   Possibly luxury listings or commercial operators not marked as Superhosts

## Final Key Takeaways for Airbnb Investment Strategy

-   Top-performing neighborhoods: Manhattan & Brooklyn (e.g., Midtown, Williamsburg) offer high revenue due to demand and premium pricing.
-   Undervalued opportunities: Budget-friendly areas (e.g., Queens, Bronx, Staten Island) show strong occupancy and growth potential with lower competition.
-   Recommendation: Invest in areas with solid occupancy but lower pricing—optimize with premium amenities and longer stays.
